diff -ru a/Cargo.toml b/Cargo.toml
--- a/Cargo.toml	2016-07-15 16:18:07.000000000 +0800
+++ b/Cargo.toml	2017-03-06 11:12:55.225224600 +0800
@@ -12,6 +12,6 @@
 [lib]
 name = "oleaut32"
 [dependencies]
-winapi = { version = "0.2.5", path = "../.." }
+winapi = "0.2.8"
 [build-dependencies]
-winapi-build = { version = "0.1.1", path = "../../build" }
+winapi-build = "0.1.1"
diff -ru a/src/lib.rs b/src/lib.rs
--- a/src/lib.rs	2015-08-27 12:47:41.000000000 +0800
+++ b/src/lib.rs	2017-03-06 14:49:28.972479000 +0800
@@ -41,8 +41,8 @@
     // pub fn SafeArrayGetLBound(psa: *mut SAFEARRAY, nDim: UINT, plLbound: *mut LONG);
     // pub fn SafeArrayLock(psa: *mut SAFEARRAY);
     // pub fn SafeArrayUnlock(psa: *mut SAFEARRAY);
-    // pub fn SafeArrayAccessData(psa: *mut SAFEARRAY, ppvData: *mut *mut c_void);
-    // pub fn SafeArrayUnaccessData(psa: *mut SAFEARRAY);
+    pub fn SafeArrayAccessData(psa: *mut SAFEARRAY, ppvData: *mut *mut c_void) -> HRESULT;
+    pub fn SafeArrayUnaccessData(psa: *mut SAFEARRAY) -> HRESULT;
     // pub fn SafeArrayGetElement(psa: *mut SAFEARRAY, rgIndices: *mut LONG, pv: *mut c_void);
     // pub fn SafeArrayPutElement(psa: *mut SAFEARRAY, rgIndices: *mut LONG, pv: *mut c_void);
     // pub fn SafeArrayCopy(psa: *mut SAFEARRAY, ppsaOut: *mut SAFEARRAY);
@@ -54,14 +54,14 @@
     // pub fn SafeArraySetIID(psa: *mut SAFEARRAY, guid: REFGUID);
     // pub fn SafeArrayGetIID(psa: *mut SAFEARRAY, pguid: *mut GUID);
     // pub fn SafeArrayGetVartype(psa: *mut SAFEARRAY, pvt: *mut VARTYPE);
-    // pub fn SafeArrayCreateVector(
-    //     vt: VARTYPE, lLbound: LONG, cElements: ULONG
-    // ) -> *mut SAFEARRAY;
+    pub fn SafeArrayCreateVector(
+        vt: VARTYPE, lLbound: LONG, cElements: ULONG
+    ) -> *mut SAFEARRAY;
     // pub fn SafeArrayCreateVectorEx(
     //     vt: VARTYPE, lLbound: LONG, cElements: ULONG, pvExtra: PVOID
     // ) -> *mut SAFEARRAY;
-    // pub fn VariantInit(pvarg: *mut VARIANTARG);
-    // pub fn VariantClear(pvarg: *mut VARIANTARG);
+    pub fn VariantInit(pvarg: *mut VARIANTARG);
+    pub fn VariantClear(pvarg: *mut VARIANTARG) -> HRESULT;
     // pub fn VariantCopy(pvargDest: *mut VARIANTARG,pvargSrc: *const VARIANTARG);
     // pub fn VariantCopyInd(pvarDest: *mut VARIANT,pvargSrc: *const VARIANTARG);
     // pub fn VariantChangeType();
